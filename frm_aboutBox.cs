using System;
using System.Diagnostics;
using System.Reflection;
using System.Windows.Forms;

namespace GeoTagNinja
{
    /// <summary>
    /// This is generated by a template so I'm not adding extra commentary. Atm it's pretty basic anyway
    /// ... it just pulls some of the Assembly info. If someone is genuienly courious, open an issue.
    /// </summary>
    partial class frm_aboutBox : Form
    {
        public frm_aboutBox()
        {
            // set basics
            AcceptButton = btn_OK;

            InitializeComponent();
            this.Text = String.Format("About {0}", AssemblyTitle);
            this.lbl_ProductName.Text = AssemblyProduct;
            this.lbl_Version.Text = String.Format("Version {0}", Assembly.GetExecutingAssembly().GetName().Version.Major.ToString() + "." + Assembly.GetExecutingAssembly().GetName().Version.Minor.ToString() + "." + Assembly.GetExecutingAssembly().GetName().Version.Build.ToString(System.Globalization.CultureInfo.InvariantCulture));
            this.lbl_Copyright.Text = AssemblyCopyright;
            this.lbl_CompanyName.Text = AssemblyCompany;
            this.tbx_Description.Text = AssemblyDescription;
            this.lbl_Paypal.Links.Clear();
            this.lbl_Paypal.Links.Add(0, this.lbl_Paypal.Width, "https://www.paypal.com/donate/?hosted_button_id=R5GSBXW8A5NNN");
        }

        #region Assembly Attribute Accessors

        public string AssemblyTitle
        {
            get
            {
                object[] attributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof(AssemblyTitleAttribute), false);
                if (attributes.Length > 0)
                {
                    AssemblyTitleAttribute titleAttribute = (AssemblyTitleAttribute)attributes[0];
                    if (titleAttribute.Title != "")
                    {
                        return titleAttribute.Title;
                    }
                }
                return System.IO.Path.GetFileNameWithoutExtension(Assembly.GetExecutingAssembly().CodeBase);
            }
        }

        public string AssemblyVersion
        {
            get
            {
                return Assembly.GetExecutingAssembly().GetName().Version.ToString();
            }
        }

        public string AssemblyDescription
        {
            get
            {
                object[] attributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof(AssemblyDescriptionAttribute), false);
                if (attributes.Length == 0)
                {
                    return "";
                }
                return ((AssemblyDescriptionAttribute)attributes[0]).Description;
            }
        }

        public string AssemblyProduct
        {
            get
            {
                object[] attributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof(AssemblyProductAttribute), false);
                if (attributes.Length == 0)
                {
                    return "";
                }
                return ((AssemblyProductAttribute)attributes[0]).Product;
            }
        }

        public string AssemblyCopyright
        {
            get
            {
                object[] attributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof(AssemblyCopyrightAttribute), false);
                if (attributes.Length == 0)
                {
                    return "";
                }
                return ((AssemblyCopyrightAttribute)attributes[0]).Copyright;
            }
        }

        public string AssemblyCompany
        {
            get
            {
                object[] attributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof(AssemblyCompanyAttribute), false);
                if (attributes.Length == 0)
                {
                    return "";
                }
                return ((AssemblyCompanyAttribute)attributes[0]).Company;
            }
        }
        #endregion

        private void Btn_OK_Click(object sender, EventArgs e)
        {
            this.Hide();
        }

        private void lbl_Paypal_Click(object sender, EventArgs e)
        {
            Process.Start("https://www.paypal.com/donate/?hosted_button_id=R5GSBXW8A5NNN");
        }

        private void lbl_website_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            Process.Start(e.Link.LinkData as string);
        }

        private void frm_aboutBox_Load(object sender, EventArgs e)
        {
            LinkLabel.Link link = new LinkLabel.Link();
            link.LinkData = "https://geotag.ninja";
            lbl_website.Links.Add(link);

        }
    }
}
